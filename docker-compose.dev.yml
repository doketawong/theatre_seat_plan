version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: theatre_db_dev
    environment:
      POSTGRES_DB: moviematic
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - theatre_network_dev
    restart: unless-stopped

  # Backend API (Development with hot reload)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: theatre_backend_dev
    environment:
      - NODE_ENV=development
      - PORT=5001
      - HOST=0.0.0.0
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=moviematic
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    ports:
      - "5001:5001"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./house:/app/house
      - ./participant:/app/participant
    networks:
      - theatre_network_dev
    depends_on:
      - database
    restart: unless-stopped
    command: npm run dev

  # Frontend React App (Development with hot reload)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: theatre_frontend_dev
    environment:
      - REACT_APP_API_URL=http://localhost:5001
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - theatre_network_dev
    depends_on:
      - backend
    restart: unless-stopped
    command: npm start

volumes:
  postgres_data_dev:
    driver: local

networks:
  theatre_network_dev:
    driver: bridge
